type LocalGroup {
  id: Int
  name: string
}

type Range {
  min: Int
  max: Int
}

type Filter {
  limit: Int!
  searchString: String!
  selectedLocalGroups: [Int!]!
  selectedWorkingGroups: [Int!]!
  selectedTimeCommitment: [Int!]!
}

type RoleClient {
  aggregateTimeCommitmentRange: Range!
  filter: Filter
}

extend type Mutation {
  updateLocalGroups(names: [String!]): [local_group!]
  updateWorkingGroups(names: [String!]): [working_group!]
  updateTimeCommitmentRange(range: [Int!]): void
  updateRoleAmount(amount: Int!): void
  updateSearchString(search: String): void
  clearFilter: void
}

extend type Query {
  roleAmount: Int!
  navbarHeight: Int!
  selectedTimeCommitment: [Int!]!
  searchString: String!
  # localGroupById(id: Int!): LocalGroup
}
