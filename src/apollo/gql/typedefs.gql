type LocalGroup {
  id: Int
  name: string
}

type WorkingGroup {
  id: Int
  name: string
}

type Range {
  min: Int
  max: Int
}

type Filter {
  limit: Int!
  searchString: String!
  selectedLocalGroups: [Int!]!
  selectedWorkingGroups: [Int!]!
  selectedTimeCommitment: Range
}

type role {
  id: Int!
  name: String!
  location: String
  time_commitment_min: Int!
  time_commitment_max: Int!
  date_added: Date!
  due_date: Date
  local_group: LocalGroup!
  working_group: WorkingGroup!
}

type RoleData {
  # aggregateTimeCommitmentRange: Range!
  filtered: [role]!
  timeCommitmentRange: Range!
  calculateTimeCommitmentRange: Range
  # filter: Filter
  # amount: Int
  # getRoles: [role]!
}

extend type Mutation {
  updateLocalGroups(names: [String!]): [local_group!]
  updateWorkingGroups(names: [String!]): [working_group!]
  updateTimeCommitmentRange(range: [Int!]): Boolean
  updateRoleAmount(amount: Int!): Boolean
  updateSearchString(search: String): Boolean
  clearFilter: Boolean
}

extend type Query {
  RoleData: RoleData!
  navbarHeight: Int!
  # localGroupById(id: Int!): LocalGroup
}
