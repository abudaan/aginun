mutation insertLocalGroup($objects: [local_group_insert_input!]!) {
  insert_local_group(objects: $objects) {
    returning {
      id
      name
    }
  }
}

# can't be used, see: // https://github.com/apollographql/apollo-client/issues/4826
query GetRoles_cant_be_used(
  $limit: Int
  $search: String
  $localGroupIds: [Int!]
  $workingGroupIds: [Int!]
  $timeCommitmentMin: Int
  $timeCommitmentMax: Int
) {
  roleData @client {
    filter {
      limit @export(as: "limit")
      searchString @export(as: "search")
      selectedLocalGroupIds @export(as: "localGroupIds")
      selectedWorkingGroupIds @export(as: "workingGroupIds")
      selectedTimeCommitmentMin @export(as: "timeCommitmentMin")
      selectedTimeCommitmentMax @export(as: "timeCommitmentMax")
    }
  }
  role(
    where: {
      local_group: { id: { _in: $localGroupIds } }
      working_group: { id: { _in: $workingGroupIds } }
      time_commitment_min: { _gte: $timeCommitmentMin }
      time_commitment_max: { _lte: $timeCommitmentMax }
      name: { _ilike: $search }
    }
    limit: $limit
  ) {
    ...RoleFragment
  }
}

query GetFilteredRoles {
  getRoleData @client {
    filtered {
      roles {
        ...RoleFragment
      }
    }
  }
}

query GetRoleData {
  roleData @client {
    filter {
      # ...RoleFilterFragment
      limit
      searchString
      selectedLocalGroups
      selectedWorkingGroups
      selectedTimeCommitmentMin
      selectedTimeCommitmentMax
    }
    amount
    filtered {
      roles {
        ...RoleFragment
      }
    }
    timeCommitmentRange
  }
}

query UpdateFilter {
  roleData @client {
    filter
  }
}

query GetRoleLimit {
  roleData @client {
    amount
    filter {
      limit
    }
  }
}

query TimeCommitmentRanges {
  time_commitment_ranges {
    range
  }
}

mutation UpdateRoles($roles: [role]) {
  updateRoles(roles: $roles) @client
}

mutation UpdateRoleFilterLocalGroups($names: [String!]) {
  updateRoleFilter(names: $names) @client
}

mutation UpdateTimeCommitment($timeCommitment: [Int!]) {
  updateTimeCommitmentRole(timeCommitment: $timeCommitment) @client
}

mutation UpdateWorkingGroups($names: [String!]) {
  updateWorkingGroups(names: $names) @client
}
